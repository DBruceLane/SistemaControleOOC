ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.main,"ax",%progbits
  16              		.align	1
  17              		.global	main
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	main:
  25              	.LFB65:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  27              		.loc 1 65 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c ****   uint32_t i;
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  42              		.loc 1 73 3
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 3


  43 0006 FFF7FEFF 		bl	HAL_Init
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  44              		.loc 1 80 3
  45 000a FFF7FEFF 		bl	SystemClock_Config
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  46              		.loc 1 87 3
  47 000e FFF7FEFF 		bl	MX_GPIO_Init
  48              	.L4:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     for (i = 0; i < 8; i++)
  49              		.loc 1 96 12
  50 0012 0023     		movs	r3, #0
  51 0014 7B60     		str	r3, [r7, #4]
  52              		.loc 1 96 5
  53 0016 14E0     		b	.L2
  54              	.L3:
  97:Core/Src/main.c ****     {
  98:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
  55              		.loc 1 98 7 discriminator 3
  56 0018 0022     		movs	r2, #0
  57 001a 4FF40051 		mov	r1, #8192
  58 001e 0D48     		ldr	r0, .L5
  59 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99:Core/Src/main.c ****       HAL_Delay(25);
  60              		.loc 1 99 7 discriminator 3
  61 0024 1920     		movs	r0, #25
  62 0026 FFF7FEFF 		bl	HAL_Delay
 100:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
  63              		.loc 1 100 7 discriminator 3
  64 002a 0122     		movs	r2, #1
  65 002c 4FF40051 		mov	r1, #8192
  66 0030 0848     		ldr	r0, .L5
  67 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101:Core/Src/main.c ****       HAL_Delay(50);
  68              		.loc 1 101 7 discriminator 3
  69 0036 3220     		movs	r0, #50
  70 0038 FFF7FEFF 		bl	HAL_Delay
  96:Core/Src/main.c ****     {
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 4


  71              		.loc 1 96 25 discriminator 3
  72 003c 7B68     		ldr	r3, [r7, #4]
  73 003e 0133     		adds	r3, r3, #1
  74 0040 7B60     		str	r3, [r7, #4]
  75              	.L2:
  96:Core/Src/main.c ****     {
  76              		.loc 1 96 5 discriminator 1
  77 0042 7B68     		ldr	r3, [r7, #4]
  78 0044 072B     		cmp	r3, #7
  79 0046 E7D9     		bls	.L3
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     HAL_Delay(800);
  80              		.loc 1 103 5
  81 0048 4FF44870 		mov	r0, #800
  82 004c FFF7FEFF 		bl	HAL_Delay
  96:Core/Src/main.c ****     {
  83              		.loc 1 96 12
  84 0050 DFE7     		b	.L4
  85              	.L6:
  86 0052 00BF     		.align	2
  87              	.L5:
  88 0054 00100140 		.word	1073811456
  89              		.cfi_endproc
  90              	.LFE65:
  92              		.section	.text.SystemClock_Config,"ax",%progbits
  93              		.align	1
  94              		.global	SystemClock_Config
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	SystemClock_Config:
 101              	.LFB66:
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 102              		.loc 1 116 1
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 64
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              	.LCFI3:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 90B0     		sub	sp, sp, #64
 112              	.LCFI4:
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 5


 113              		.cfi_def_cfa_offset 72
 114 0004 00AF     		add	r7, sp, #0
 115              	.LCFI5:
 116              		.cfi_def_cfa_register 7
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117              		.loc 1 117 22
 118 0006 07F11803 		add	r3, r7, #24
 119 000a 2822     		movs	r2, #40
 120 000c 0021     		movs	r1, #0
 121 000e 1846     		mov	r0, r3
 122 0010 FFF7FEFF 		bl	memset
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 118 22
 124 0014 3B1D     		adds	r3, r7, #4
 125 0016 0022     		movs	r2, #0
 126 0018 1A60     		str	r2, [r3]
 127 001a 5A60     		str	r2, [r3, #4]
 128 001c 9A60     		str	r2, [r3, #8]
 129 001e DA60     		str	r2, [r3, #12]
 130 0020 1A61     		str	r2, [r3, #16]
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 131              		.loc 1 123 36
 132 0022 0123     		movs	r3, #1
 133 0024 BB61     		str	r3, [r7, #24]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134              		.loc 1 124 30
 135 0026 4FF48033 		mov	r3, #65536
 136 002a FB61     		str	r3, [r7, #28]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 137              		.loc 1 125 36
 138 002c 0023     		movs	r3, #0
 139 002e 3B62     		str	r3, [r7, #32]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140              		.loc 1 126 30
 141 0030 0123     		movs	r3, #1
 142 0032 BB62     		str	r3, [r7, #40]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143              		.loc 1 127 34
 144 0034 0223     		movs	r3, #2
 145 0036 7B63     		str	r3, [r7, #52]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146              		.loc 1 128 35
 147 0038 4FF48033 		mov	r3, #65536
 148 003c BB63     		str	r3, [r7, #56]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 149              		.loc 1 129 32
 150 003e 4FF4E013 		mov	r3, #1835008
 151 0042 FB63     		str	r3, [r7, #60]
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152              		.loc 1 130 7
 153 0044 07F11803 		add	r3, r7, #24
 154 0048 1846     		mov	r0, r3
 155 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 6


 156 004e 0346     		mov	r3, r0
 157              		.loc 1 130 6
 158 0050 002B     		cmp	r3, #0
 159 0052 01D0     		beq	.L8
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 160              		.loc 1 132 5
 161 0054 FFF7FEFF 		bl	Error_Handler
 162              	.L8:
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163              		.loc 1 136 31
 164 0058 0F23     		movs	r3, #15
 165 005a 7B60     		str	r3, [r7, #4]
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166              		.loc 1 138 34
 167 005c 0223     		movs	r3, #2
 168 005e BB60     		str	r3, [r7, #8]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169              		.loc 1 139 35
 170 0060 0023     		movs	r3, #0
 171 0062 FB60     		str	r3, [r7, #12]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 172              		.loc 1 140 36
 173 0064 4FF48063 		mov	r3, #1024
 174 0068 3B61     		str	r3, [r7, #16]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 175              		.loc 1 141 36
 176 006a 0023     		movs	r3, #0
 177 006c 7B61     		str	r3, [r7, #20]
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 178              		.loc 1 143 7
 179 006e 3B1D     		adds	r3, r7, #4
 180 0070 0221     		movs	r1, #2
 181 0072 1846     		mov	r0, r3
 182 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 183 0078 0346     		mov	r3, r0
 184              		.loc 1 143 6
 185 007a 002B     		cmp	r3, #0
 186 007c 01D0     		beq	.L10
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 187              		.loc 1 145 5
 188 007e FFF7FEFF 		bl	Error_Handler
 189              	.L10:
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** }
 190              		.loc 1 147 1
 191 0082 00BF     		nop
 192 0084 4037     		adds	r7, r7, #64
 193              	.LCFI6:
 194              		.cfi_def_cfa_offset 8
 195 0086 BD46     		mov	sp, r7
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 7


 196              	.LCFI7:
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0088 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE66:
 203              		.section	.text.MX_GPIO_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	MX_GPIO_Init:
 211              	.LFB67:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief GPIO Initialization Function
 151:Core/Src/main.c ****   * @param None
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** static void MX_GPIO_Init(void)
 155:Core/Src/main.c **** {
 212              		.loc 1 155 1
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 32
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              	.LCFI8:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 88B0     		sub	sp, sp, #32
 222              	.LCFI9:
 223              		.cfi_def_cfa_offset 40
 224 0004 00AF     		add	r7, sp, #0
 225              	.LCFI10:
 226              		.cfi_def_cfa_register 7
 156:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 227              		.loc 1 156 20
 228 0006 07F11003 		add	r3, r7, #16
 229 000a 0022     		movs	r2, #0
 230 000c 1A60     		str	r2, [r3]
 231 000e 5A60     		str	r2, [r3, #4]
 232 0010 9A60     		str	r2, [r3, #8]
 233 0012 DA60     		str	r2, [r3, #12]
 234              	.LBB4:
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 159:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 235              		.loc 1 159 3
 236 0014 1E4B     		ldr	r3, .L12
 237 0016 9B69     		ldr	r3, [r3, #24]
 238 0018 1D4A     		ldr	r2, .L12
 239 001a 43F01003 		orr	r3, r3, #16
 240 001e 9361     		str	r3, [r2, #24]
 241 0020 1B4B     		ldr	r3, .L12
 242 0022 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 8


 243 0024 03F01003 		and	r3, r3, #16
 244 0028 FB60     		str	r3, [r7, #12]
 245 002a FB68     		ldr	r3, [r7, #12]
 246              	.LBE4:
 247              	.LBB5:
 160:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 248              		.loc 1 160 3
 249 002c 184B     		ldr	r3, .L12
 250 002e 9B69     		ldr	r3, [r3, #24]
 251 0030 174A     		ldr	r2, .L12
 252 0032 43F02003 		orr	r3, r3, #32
 253 0036 9361     		str	r3, [r2, #24]
 254 0038 154B     		ldr	r3, .L12
 255 003a 9B69     		ldr	r3, [r3, #24]
 256 003c 03F02003 		and	r3, r3, #32
 257 0040 BB60     		str	r3, [r7, #8]
 258 0042 BB68     		ldr	r3, [r7, #8]
 259              	.LBE5:
 260              	.LBB6:
 161:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 261              		.loc 1 161 3
 262 0044 124B     		ldr	r3, .L12
 263 0046 9B69     		ldr	r3, [r3, #24]
 264 0048 114A     		ldr	r2, .L12
 265 004a 43F00403 		orr	r3, r3, #4
 266 004e 9361     		str	r3, [r2, #24]
 267 0050 0F4B     		ldr	r3, .L12
 268 0052 9B69     		ldr	r3, [r3, #24]
 269 0054 03F00403 		and	r3, r3, #4
 270 0058 7B60     		str	r3, [r7, #4]
 271 005a 7B68     		ldr	r3, [r7, #4]
 272              	.LBE6:
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 164:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 273              		.loc 1 164 3
 274 005c 0022     		movs	r2, #0
 275 005e 4FF40051 		mov	r1, #8192
 276 0062 0C48     		ldr	r0, .L12+4
 277 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 167:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 278              		.loc 1 167 23
 279 0068 4FF40053 		mov	r3, #8192
 280 006c 3B61     		str	r3, [r7, #16]
 168:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 281              		.loc 1 168 24
 282 006e 0123     		movs	r3, #1
 283 0070 7B61     		str	r3, [r7, #20]
 169:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 169 24
 285 0072 0023     		movs	r3, #0
 286 0074 BB61     		str	r3, [r7, #24]
 170:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 287              		.loc 1 170 25
 288 0076 0223     		movs	r3, #2
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 9


 289 0078 FB61     		str	r3, [r7, #28]
 171:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 290              		.loc 1 171 3
 291 007a 07F11003 		add	r3, r7, #16
 292 007e 1946     		mov	r1, r3
 293 0080 0448     		ldr	r0, .L12+4
 294 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** }
 295              		.loc 1 173 1
 296 0086 00BF     		nop
 297 0088 2037     		adds	r7, r7, #32
 298              	.LCFI11:
 299              		.cfi_def_cfa_offset 8
 300 008a BD46     		mov	sp, r7
 301              	.LCFI12:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 008c 80BD     		pop	{r7, pc}
 305              	.L13:
 306 008e 00BF     		.align	2
 307              	.L12:
 308 0090 00100240 		.word	1073876992
 309 0094 00100140 		.word	1073811456
 310              		.cfi_endproc
 311              	.LFE67:
 313              		.section	.text.Error_Handler,"ax",%progbits
 314              		.align	1
 315              		.global	Error_Handler
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	Error_Handler:
 322              	.LFB68:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void Error_Handler(void)
 184:Core/Src/main.c **** {
 323              		.loc 1 184 1
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              	.LCFI13:
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 00AF     		add	r7, sp, #0
 333              	.LCFI14:
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 10


 334              		.cfi_def_cfa_register 7
 335              	.LBB7:
 336              	.LBB8:
 337              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 11


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 12


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 338              		.loc 2 142 3
 339              		.syntax unified
 340              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 341 0004 72B6     		cpsid i
 342              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343              		.loc 2 143 1
 344              		.thumb
 345              		.syntax unified
 346 0006 00BF     		nop
 347              	.L15:
 348              	.LBE8:
 349              	.LBE7:
 185:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 186:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 187:Core/Src/main.c ****   __disable_irq();
 188:Core/Src/main.c ****   while (1)
 350              		.loc 1 188 9 discriminator 1
 351 0008 FEE7     		b	.L15
 352              		.cfi_endproc
 353              	.LFE68:
 355              		.text
 356              	.Letext0:
 357              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 358              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 13


 359              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 360              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 361              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 362              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 363              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\cclHtAKg.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:16     .text.main:00000000 $t
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:24     .text.main:00000000 main
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:100    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:210    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:88     .text.main:00000054 $d
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:93     .text.SystemClock_Config:00000000 $t
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:321    .text.Error_Handler:00000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:204    .text.MX_GPIO_Init:00000000 $t
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:308    .text.MX_GPIO_Init:00000090 $d
C:\Users\danie\AppData\Local\Temp\cclHtAKg.s:314    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
